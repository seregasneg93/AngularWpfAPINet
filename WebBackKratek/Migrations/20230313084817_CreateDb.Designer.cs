// <auto-generated />
using System;
using KratekData.Data.ConnectDB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace WebBackKratek.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230313084817_CreateDb")]
    partial class CreateDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KratekData.Data.Entyties.ChangeRegisterTerminalFromController", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateChange")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionRegisterTerminal")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<double>("NewValue")
                        .HasColumnType("float");

                    b.Property<double>("OldValue")
                        .HasColumnType("float");

                    b.Property<int?>("TerminalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TerminalId");

                    b.ToTable("ChangeRegisterTerminalFromControllers");
                });

            modelBuilder.Entity("KratekData.Data.Entyties.ConsumptionCoalHourTerminal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateWrite")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameRegister")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("TerminalId")
                        .HasColumnType("int");

                    b.Property<double>("ValueRegister")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("TerminalId");

                    b.ToTable("ConsumptionCoalHourTerminals");
                });

            modelBuilder.Entity("KratekData.Data.Entyties.DataFrequency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DatePoll")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FrequencyId")
                        .HasColumnType("int");

                    b.Property<string>("NameRegister")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ValueRegister")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("FrequencyId");

                    b.ToTable("DataFrequencies");
                });

            modelBuilder.Entity("KratekData.Data.Entyties.DataFrequencyJournal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DatePoll")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FrequencyId")
                        .HasColumnType("int");

                    b.Property<string>("NameRegister")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ValueRegister")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("FrequencyId");

                    b.ToTable("DataFrequencyJournals");
                });

            modelBuilder.Entity("KratekData.Data.Entyties.DataTerminal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateAddValues")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionsRegister")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Flags")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("GroupRegister")
                        .HasColumnType("int");

                    b.Property<int>("NumberRegister")
                        .HasColumnType("int");

                    b.Property<int?>("TerminalId")
                        .HasColumnType("int");

                    b.Property<double>("ValueRegister")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("TerminalId");

                    b.ToTable("DataTerminals");
                });

            modelBuilder.Entity("KratekData.Data.Entyties.DataTerminalJournal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateAddValues")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionsRegister")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Flags")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("GroupRegister")
                        .HasColumnType("int");

                    b.Property<int>("NumberRegister")
                        .HasColumnType("int");

                    b.Property<int?>("TerminalId")
                        .HasColumnType("int");

                    b.Property<double>("ValueRegister")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("TerminalId");

                    b.ToTable("DataTerminalJournals");
                });

            modelBuilder.Entity("KratekData.Data.Entyties.ErrorFrequency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateError")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FrequencyId")
                        .HasColumnType("int");

                    b.Property<string>("NameError")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.HasIndex("FrequencyId");

                    b.ToTable("ErrorFrequencies");
                });

            modelBuilder.Entity("KratekData.Data.Entyties.ErrorJournalFrequency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("ActualError")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateError")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FrequencyId")
                        .HasColumnType("int");

                    b.Property<string>("NameError")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.HasIndex("FrequencyId");

                    b.ToTable("ErrorJournalFrequencies");
                });

            modelBuilder.Entity("KratekData.Data.Entyties.ErrorJournalTerminal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateError")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameDescription")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int?>("TerminalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TerminalId");

                    b.ToTable("ErrorJournalTerminals");
                });

            modelBuilder.Entity("KratekData.Data.Entyties.ErrorTerminal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateError")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameDescription")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("TerminalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TerminalId");

                    b.ToTable("ErrorTerminals");
                });

            modelBuilder.Entity("KratekData.Data.Entyties.Frequency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Current")
                        .HasColumnType("float");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastPoll")
                        .HasColumnType("datetime2");

                    b.Property<int>("Modbuss")
                        .HasColumnType("int");

                    b.Property<int?>("TerminalId")
                        .HasColumnType("int");

                    b.Property<string>("TypeEngine")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TypeFrequency")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("TerminalId");

                    b.ToTable("Frequencies");
                });

            modelBuilder.Entity("KratekData.Data.Entyties.SensorTerminal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AcessSensor")
                        .HasColumnType("bit");

                    b.Property<string>("NameSensor")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("TerminalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TerminalId");

                    b.ToTable("SensorTerminals");
                });

            modelBuilder.Entity("KratekData.Data.Entyties.TelegramUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NameContact")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Phone")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TerminalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TerminalId");

                    b.ToTable("TelegramUsers");
                });

            modelBuilder.Entity("KratekData.Data.Entyties.Terminal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("IMEI")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameTerminal")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("SlaveId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Terminals");
                });

            modelBuilder.Entity("KratekData.Data.Entyties.TerminalSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Acess")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("AcessReadModbuss")
                        .HasColumnType("bit");

                    b.Property<string>("AdressObject")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("CapasityBunker")
                        .HasColumnType("float");

                    b.Property<bool>("ConenctionsTerminalJobChannel")
                        .HasColumnType("bit");

                    b.Property<bool>("ConnectionsTerminalServicesChannel")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateChangeAsphan")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateLastInterogation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateLoadCoal")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descriptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Ibr")
                        .HasColumnType("bit");

                    b.Property<double>("MyProperty")
                        .HasColumnType("float");

                    b.Property<double>("NormaWater")
                        .HasColumnType("float");

                    b.Property<string>("NumberPhone")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("PollFrequencies")
                        .HasColumnType("bit");

                    b.Property<double>("PowerBoiler")
                        .HasColumnType("float");

                    b.Property<double>("PowerWanCoal")
                        .HasColumnType("float");

                    b.Property<int?>("TerminalId")
                        .HasColumnType("int");

                    b.Property<string>("TypeAsphan")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TypeServices")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("VersionFirtware")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TerminalId");

                    b.ToTable("TerminalSettings");
                });

            modelBuilder.Entity("KratekData.Data.Entyties.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("LastEntry")
                        .HasColumnType("datetime2");

                    b.Property<string>("Login")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("StatusLogin")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("KratekData.Data.Entyties.UserChange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Client")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("DateChange")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescParametr")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("NamePK")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("NewValue")
                        .HasColumnType("int");

                    b.Property<int>("OldValue")
                        .HasColumnType("int");

                    b.Property<string>("ResultWriteClient")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TypeChange")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserChanges");
                });

            modelBuilder.Entity("TerminalUser", b =>
                {
                    b.Property<int>("TerminalsId")
                        .HasColumnType("int");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("TerminalsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("TerminalUser");
                });

            modelBuilder.Entity("KratekData.Data.Entyties.ChangeRegisterTerminalFromController", b =>
                {
                    b.HasOne("KratekData.Data.Entyties.Terminal", "Terminal")
                        .WithMany("ChangeRegisterTerminalFromControllers")
                        .HasForeignKey("TerminalId");

                    b.Navigation("Terminal");
                });

            modelBuilder.Entity("KratekData.Data.Entyties.ConsumptionCoalHourTerminal", b =>
                {
                    b.HasOne("KratekData.Data.Entyties.Terminal", "Terminal")
                        .WithMany("ConsumptionCoalHourTerminals")
                        .HasForeignKey("TerminalId");

                    b.Navigation("Terminal");
                });

            modelBuilder.Entity("KratekData.Data.Entyties.DataFrequency", b =>
                {
                    b.HasOne("KratekData.Data.Entyties.Frequency", "Frequency")
                        .WithMany("DataFrequencies")
                        .HasForeignKey("FrequencyId");

                    b.Navigation("Frequency");
                });

            modelBuilder.Entity("KratekData.Data.Entyties.DataFrequencyJournal", b =>
                {
                    b.HasOne("KratekData.Data.Entyties.Frequency", "Frequency")
                        .WithMany("DataFrequencyJournals")
                        .HasForeignKey("FrequencyId");

                    b.Navigation("Frequency");
                });

            modelBuilder.Entity("KratekData.Data.Entyties.DataTerminal", b =>
                {
                    b.HasOne("KratekData.Data.Entyties.Terminal", "Terminal")
                        .WithMany("DataTerminals")
                        .HasForeignKey("TerminalId");

                    b.Navigation("Terminal");
                });

            modelBuilder.Entity("KratekData.Data.Entyties.DataTerminalJournal", b =>
                {
                    b.HasOne("KratekData.Data.Entyties.Terminal", "Terminal")
                        .WithMany()
                        .HasForeignKey("TerminalId");

                    b.Navigation("Terminal");
                });

            modelBuilder.Entity("KratekData.Data.Entyties.ErrorFrequency", b =>
                {
                    b.HasOne("KratekData.Data.Entyties.Frequency", "Frequency")
                        .WithMany("ErrorFrequencies")
                        .HasForeignKey("FrequencyId");

                    b.Navigation("Frequency");
                });

            modelBuilder.Entity("KratekData.Data.Entyties.ErrorJournalFrequency", b =>
                {
                    b.HasOne("KratekData.Data.Entyties.Frequency", "Frequency")
                        .WithMany("ErrorJournalFrequencies")
                        .HasForeignKey("FrequencyId");

                    b.Navigation("Frequency");
                });

            modelBuilder.Entity("KratekData.Data.Entyties.ErrorJournalTerminal", b =>
                {
                    b.HasOne("KratekData.Data.Entyties.Terminal", "Terminal")
                        .WithMany("ErrorJournalTerminals")
                        .HasForeignKey("TerminalId");

                    b.Navigation("Terminal");
                });

            modelBuilder.Entity("KratekData.Data.Entyties.ErrorTerminal", b =>
                {
                    b.HasOne("KratekData.Data.Entyties.Terminal", "Terminal")
                        .WithMany("ErrorTerminals")
                        .HasForeignKey("TerminalId");

                    b.Navigation("Terminal");
                });

            modelBuilder.Entity("KratekData.Data.Entyties.Frequency", b =>
                {
                    b.HasOne("KratekData.Data.Entyties.Terminal", "Terminal")
                        .WithMany("Frequencies")
                        .HasForeignKey("TerminalId");

                    b.Navigation("Terminal");
                });

            modelBuilder.Entity("KratekData.Data.Entyties.SensorTerminal", b =>
                {
                    b.HasOne("KratekData.Data.Entyties.Terminal", "Terminal")
                        .WithMany("SensorTerminals")
                        .HasForeignKey("TerminalId");

                    b.Navigation("Terminal");
                });

            modelBuilder.Entity("KratekData.Data.Entyties.TelegramUser", b =>
                {
                    b.HasOne("KratekData.Data.Entyties.Terminal", "Terminal")
                        .WithMany("TelegramUsers")
                        .HasForeignKey("TerminalId");

                    b.Navigation("Terminal");
                });

            modelBuilder.Entity("KratekData.Data.Entyties.TerminalSetting", b =>
                {
                    b.HasOne("KratekData.Data.Entyties.Terminal", "Terminal")
                        .WithMany("TerminalSettings")
                        .HasForeignKey("TerminalId");

                    b.Navigation("Terminal");
                });

            modelBuilder.Entity("KratekData.Data.Entyties.UserChange", b =>
                {
                    b.HasOne("KratekData.Data.Entyties.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TerminalUser", b =>
                {
                    b.HasOne("KratekData.Data.Entyties.Terminal", null)
                        .WithMany()
                        .HasForeignKey("TerminalsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KratekData.Data.Entyties.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KratekData.Data.Entyties.Frequency", b =>
                {
                    b.Navigation("DataFrequencies");

                    b.Navigation("DataFrequencyJournals");

                    b.Navigation("ErrorFrequencies");

                    b.Navigation("ErrorJournalFrequencies");
                });

            modelBuilder.Entity("KratekData.Data.Entyties.Terminal", b =>
                {
                    b.Navigation("ChangeRegisterTerminalFromControllers");

                    b.Navigation("ConsumptionCoalHourTerminals");

                    b.Navigation("DataTerminals");

                    b.Navigation("ErrorJournalTerminals");

                    b.Navigation("ErrorTerminals");

                    b.Navigation("Frequencies");

                    b.Navigation("SensorTerminals");

                    b.Navigation("TelegramUsers");

                    b.Navigation("TerminalSettings");
                });
#pragma warning restore 612, 618
        }
    }
}
